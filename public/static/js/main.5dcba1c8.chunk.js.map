{"version":3,"sources":["components/Login.js","utils.js","components/Header.js","components/Words.js","components/WordEdit.js","components/ProgressBar.js","components/Switch.js","components/Play.js","components/About.js","components/App.js","serviceWorker.js","index.js"],"names":["SIGNUP_MUTATION","gql","UPGRADE_MUTATION","LOGIN_MUTATION","Login","state","isLogin","email","password","user_name","userId","role","this","props","user","user_id","user_role","setUserInfo","parseInt","setState","className","value","onChange","e","target","type","placeholder","mutation","variables","onCompleted","data","_confirm","onError","error","console","log","message","loading","onClick","handleLogin","disabled","length","substring","lastIndexOf","event","preventDefault","history","push","window","location","reload","Component","withRouter","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","c","charAt","indexOf","Header","isLoggedIn","style","to","GET_WORDS","Words","word","pathname","word_id","text","pinyin","english","italics","query","refetch","word_list","Level","all_words","map","times_used","level","level_number","editWord","EDIT_WORD","WordEdit","word_text","width","update","store","ProgressBar","currentTimeInterval","dotStyleEmpty","height","dotStyleFullInterval","display","justifyContent","flexDirection","interval_id","textToShow","displayNewStatus","Switch","switchId","isOn","handleToggle","isDisabled","checked","id","background","htmlFor","MAKE_ATTEMPT","CREATE_USER","GET_SENTENCE","Play","showModal","showCharacterDefinitions","hideModal","a","refetchUser","showAnswer","showPinyin","showTraditional","isSubmitted","userResponse","isCorrect","audio","timeFetched","lastSentence","prevProps","_id","correct_response","msg","SpeechSynthesisUtterance","lang","rate","pitch","speechSynthesis","speak","color","checkAnswer","makeAttempt","wordId","correctResponse","time_fetched","playAudio","flexDirectioion","fontSize","current_interval","progress","context","marginLeft","nextSentence","getNextSentence","sentenceParts","display_text","num_occurences","match","occurences_displayed","getCurrentProgress","word_taught","raw_text","buttonMarginStart","userInterval","getUserInterval","alt","src","getText","refetchQueries","part","minWidth","maxWidth","margin","getFontColor","onKeyDown","key","submitAnswer","marginBlockStart","new_words_seen","total_word_count","words_learned","intervals_completed","prevState","playDashboard","createUser","href","About","GET_USER","App","me","exact","path","render","component","Boolean","hostname","httpLink","createHttpLink","uri","credentials","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5dcba1c8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Mutation} from 'react-apollo'\nimport { withRouter } from 'react-router-dom';\n\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $user_name: String!, $role: String!) {\n    CreateUser(email: $email, password: $password, user_name: $user_name, role: $role) {\n      user_id\n      user_name\n      user_password\n      user_role\n    }\n  }\n`\nconst UPGRADE_MUTATION = gql`\n  mutation UpgradeMutation($email: String!, $password: String!, $user_name: String!) {\n    UpgradeUser(email: $email, password: $password, user_name: $user_name) {\n      user_id\n      user_name\n      user_password\n      user_role\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    Login(email: $email, password: $password) {\n      user_id\n      user_name\n      user_password\n      user_role\n    }\n  }\n`\n\nclass Login extends Component {\n  state = {\n    isLogin: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    user_name: '',\n    userId: null,\n    role: \"STUDENT\"\n  }\n\n  componentDidMount(){\n    if(this.props.user){\n      const {user_name, user_id , user_role} = this.props.user\n      this.setUserInfo(user_name, parseInt(user_id), user_role)\n    }\n  }\n\n  setUserInfo(user_name, userId, role){\n    this.setState({user_name, userId: userId, role: role})\n\n  }\n\n render() {\n    const { isLogin, email, password, user_name, userId, role} = this.state\n    return (\n    <div>\n      <h4>{isLogin ? 'Login' : 'Sign Up'}</h4>\n\n      <div className=\"flex flex-column\">\n        {!isLogin && (\n          <input\n            value={user_name}\n            onChange={e => this.setState({ user_name: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n        )}\n        <input\n          value={email}\n          onChange={e => this.setState({ email: e.target.value })}\n          type=\"text\"\n          placeholder=\"Your email address\"\n        />\n        <input\n          value={password}\n          onChange={e => this.setState({ password: e.target.value })}\n          type=\"password\"\n          placeholder=\"Choose a safe password\"\n        />\n      </div>\n      <div>\n      <Mutation\n        mutation={isLogin ? LOGIN_MUTATION : role === 'TESTER' ? UPGRADE_MUTATION : SIGNUP_MUTATION}\n        variables={{ email, password, user_name, userId, role: \"STUDENT\"}}\n        onCompleted={data => this._confirm()}\n        onError={(error) => console.log(error.message)}\n      >\n        {(mutation, { loading, error }) => (\n          <div>\n            <button\n              type=\"button\"\n              onClick={e => this.handleLogin(e, mutation)}\n              disabled={!this.state.email.length || !this.state.password.length || (!this.state.user_name.length && !this.state.isLogin)}\n            >\n              {isLogin ? 'login' : 'create account'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isLogin: !this.state.isLogin })}\n            >\n            {isLogin ? 'need to create an account?' : 'already have an account?'}\n\n            </button>\n            {error && <p>{error.message.substring(error.message.lastIndexOf(':') + 1)}</p>}\n          </div>\n        )}\n      </Mutation>\n      </div>\n    </div>\n  )\n\n }\n\n\n handleLogin(event, mutation){\n  event.preventDefault()\n  mutation()\n}\n\n _confirm() {\n  //this.props.refetchUser()\n  this.props.history.push('/')\n  window.location.reload(true);\n}\n\n\n}\n\n\nexport default withRouter(Login)","export const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getCookie} from '../utils'\n\nclass Header extends Component {\n\n  render() {\n    const isLoggedIn = !!getCookie('access-token');\n\n    return (\n      <div>\n        <div style={{\"marginBottom\": \"10px\"}}>Cloze Chinese Prototype</div>\n        <Link to=\"/\">\n            Learn\n          </Link>\n          <div>\n        {isLoggedIn && this.props.user && this.props.user.role === 'ADMIN' && (\n          <div>\n            <div className=\"flex\">\n              <Link to=\"/author\">\n                author\n              </Link>\n            </div>\n            <div className=\"flex\">\n              <Link to=\"/editor\">\n                editor\n              </Link>\n            </div>\n            <div className=\"flex\">\n              <Link to=\"/words\">\n                words\n              </Link>\n            </div>\n          </div>\n          )}\n          </div>\n        <div>  \n          <Link to=\"/about\">\n              about\n          </Link>\n        </div> \n        <div className=\"flex flex-fixed\">\n          {isLoggedIn && this.props.user && this.props.user.user_role !== 'TESTER' ? (\n            <div\n              onClick={() => {\n                document.cookie = \"access-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n                document.cookie = \"refresh-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n                this.props.history.push('/')\n                window.location.reload(true);\n\n                //this.props.refetchUser()\n              }}\n            >\n              logout\n            </div>\n          ) : (\n            <Link to=\"/login\">\n              login\n            </Link>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header)","import React, { Component } from 'react'\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst GET_WORDS = gql`\n  query getWords {\n\tLevel {\n\t\tall_words{\n\t\t\tword_id\n\t\t\ttext\n\t\t\tpinyin\n\t\t\tenglish\n\t\t\titalics\n\t\t\ttimes_used\n\t\t\tlevel{\n\t\t\t\tlevel_number\n\t\t\t}\n\t\t}\n\t}\n  }\n`\n\n\nclass Words extends Component {\n\n\teditWord(word){\n\t\tthis.props.history.push({\n\t\t\tpathname: '/wordedit',\n\t\t\tstate: {\n\t\t\t\tword_id: word.word_id,\n\t\t\t\ttext: word.text,\n\t\t\t\tpinyin: word.pinyin,\n\t\t\t\tenglish: word.english,\n\t\t\t\titalics: word.italics\n\t\t\t}  \n\t\t})\n\t}\n\trender(){\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header\">\n\t\t      <Query query={GET_WORDS}>\n\t\t      \t{({ loading, error, data, refetch }) => {\n\t\t      \t  if (loading) return <div>Fetching</div>\n\t              if (error) return <div>error</div>\n\t              const word_list = data.Level[0].all_words\n\t              return(\n\t              \t\t <table>\n\t              \t\t  <thead>\n\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t      <th>Word</th>\n\t\t\t\t\t\t      <th>Pinyin</th>\n\t\t\t\t\t\t      <th>Translation</th>\n\t\t\t\t\t\t      <th>Notes</th>\n\t\t\t\t\t\t      <th>Times Used</th>\n\t\t\t\t\t\t      <th>Level</th>\n\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t  </thead>\n\t              \t\t<tbody>\n\t              \t\t{word_list.map(word => {\n\t              \t\t\treturn(\n\t\t              \t\t\t<tr>\n\t\t              \t\t\t <td>{word.text}</td>\n\t\t              \t\t\t <td>{word.pinyin}</td>\n\t\t              \t\t\t <td>{word.english}</td>\n\t\t              \t\t\t <td>{word.italics}</td>\n\t\t              \t\t\t <td>{word.times_used}</td>\n\t\t              \t\t\t <td>{word.level ? word.level.level_number : 0}</td>\n\t\t              \t\t\t <td><button onClick={() => this.editWord(word)}>Edit</button></td>\n\t\t              \t\t\t</tr>\n\t\t              \t\t)\n\t              \t\t})}\n\t              \t\t</tbody>\n\t              \t\t</table>\n\t              )\n\t          \t}\n\t      \t\t}\n\t          </Query>\n\t      </header>\n\t    </div>\n\t  );\n  \t}\n}\n\nexport default Words","import React, { Component } from 'react'\nimport { Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport '../styles/App.css';\n\nconst EDIT_WORD = gql`\n  mutation editWord($word_id: Int!,  $english: String!,  $pinyin: String!) {\n  \tEditWord(word_id: $word_id, english: $english, pinyin: $pinyin)\n  }\n`\n\nclass WordEdit extends Component {\n\tconstructor(props){\n    super(props)\n    this.state = {\n      word_id: props.location.state.word_id,\n      word_text: props.location.state.word_text,\n      pinyin: props.location.state.pinyin,\n      english: props.location.state.english\n    }\n  }\n\trender(){\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header\">\n\t        <p>{this.state.word_text}</p>\n\t        <p>{this.state.pinyin}</p>\n\t        <p>Translation</p>\n            <input\n              value={this.state.english}\n              onChange={e => this.setState({ english: e.target.value })}\n              type=\"english\"\n              placeholder=\"Enter word's english translation\"\n              style={{width: \"250px\"}}\n            />\n            <input\n              value={this.state.pinyin}\n              onChange={e => this.setState({ pinyin: e.target.value })}\n              type=\"pinyin\"\n              placeholder=\"Enter word's pinyin\"\n              style={{width: \"250px\"}}\n            />\n            <Mutation mutation={EDIT_WORD}\n               update={(store) => {\n                   this.props.history.push({pathname: '/' })                   \n                }}\n             >\n\t            {editWord => (\n\t              <button onClick={() => editWord({variables: {word_id: parseInt(this.state.word_id), pinyin: this.state.pinyin ,english: this.state.english}})} disabled={this.state.english.length === 0}>\n\t              Submit\n\t              </button>\n\t            )}\n             </Mutation>\n\t      </header>\n\t    </div>\n\t  );\n  \t}\n}\n\nexport default WordEdit;","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const {currentTimeInterval} = props;\n\nconst dotStyleEmpty = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"backgroundColor\": \"#bbb\",\n  \"borderRadius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\nconst textStyle = {\n  \"marginBlockStart\": \"1.2em\",\n  \"fontSize\": \"10px\",\n  \"color\": \"aquamarine\"\n}\n\nconst dotGroup = {\n  \"marginRight\": \"10px\"\n}\n\nconst dotStyleFullInterval = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"backgroundColor\": \"rgb(85 233 255)\",\n  \"borderRadius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\n\nfunction displayNewStatus(){\n  var textToShow = \"\"\n  if(currentTimeInterval === 1){\n    textToShow = \"New Word\"\n  } \n  return textToShow\n}\n\n\n  return (\n    <div style={{display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"row\"}}>\n      <div style={dotGroup}>\n      {[1,2,3,4,5,6,7,8,9,10].map(interval_id => {\n        return(\n          <span style={currentTimeInterval > interval_id ? dotStyleFullInterval : dotStyleEmpty}></span>\n        )\n      })}\n      </div>\n      <p style={textStyle}>{displayNewStatus()}</p>\n    </div>\n  );\n};\n\nexport default ProgressBar;","import React from 'react';\nimport '../styles/Switch.css';\n\nconst Switch = ({switchId, isOn, handleToggle, isDisabled }) => {\n  return (\n    <>\n      <input\n        checked={isOn}\n        onChange={handleToggle}\n        className=\"react-switch-checkbox\"\n        id={switchId ||`react-switch-new`}\n        type=\"checkbox\"\n        disabled={isDisabled}\n      />\n      <label\n        style={{ background: isOn && '#06D6A0' }}\n        className=\"react-switch-label\"\n        htmlFor={switchId ||`react-switch-new`}\n      >\n        <span className={`react-switch-button`} />\n      </label>\n    </>\n  );\n};\n\nexport default Switch;","import React, { Component } from 'react'\nimport {Query, Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\n//import { Howl } from 'howler';\nimport ProgressBar from './ProgressBar'\nimport Switch from \"./Switch\";\nimport { getCookie} from '../utils'\nimport { withRouter } from 'react-router-dom';\n//import runJxa from 'run-jxa'\n\n\n\n\n\nconst MAKE_ATTEMPT = gql`\n  mutation makeAttempt($word_id: Int!, $interval_id: Int!) {\n\tmakeClozeAttempt(word_id: $word_id, interval_id: $interval_id)\n  }\n\n`\n\nconst CREATE_USER = gql`\nmutation addTemporaryUser($user_name: String!, $email: String!, $password: String!, $role: String!) {\n  CreateUser(user_name: $user_name, email: $email, password: $password, role: $role) {\n    user_id\n    user_name\n    user_role\n  }\n}\n\n`\n\nconst GET_SENTENCE = gql`\n  query getSentence {\n\tgetNextSentence {\n\t\tphrase_id\n    time_fetched\n\t\traw_text\n\t\tdisplay_text\n    clean_text\n\t\tpinyin\n\t\tenglish\n\t\tword_taught{\n      word_id\n      word_text\n\t\t\tenglish\n      pinyin\n      interval_id\n\t\t}\n\n\t}\n\n  getCurrentProgress {\n    new_words_seen\n    words_learned\n    intervals_completed\n    total_word_count\n  }\n\n  }\n\n`\n\nclass Play extends Component {\n\tconstructor(){\n    super()\n    this.state = {\n    \tshowAnswer: false,\n      showPinyin: false,\n      showTraditional: false,\n      isSubmitted: false,\n      showCharacterDefinitions: false,\n    \tuserResponse: '',\n      isCorrect: true,\n      audio: null,\n      timeFetched: null,\n      user:{\n        user_name: null,\n        userId: null,\n        role: null\n      },\n      lastSentence: null\n\n    }\n  }\n\n  componentDidMount(){\n    if(this.props.user){\n      const {user_name, user_id ,user_role} = this.props.user\n      this.setUserInfo(user_name, parseInt(user_id), user_role)\n    }\n  }\n\n  setUserInfo(user_name, userId, role){\n    this.setState({user:{user_name, userId, role}})\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.user && this.props.user && this.props.user._id === prevProps.user._id && this.props.user.role === prevProps.user.role){\n      //do nothing\n    }else{\n      if(this.props.user){\n        const {user_name, user_id ,user_role} = this.props.user\n        this.setUserInfo(user_name, parseInt(user_id), user_role)\n      }else if(prevProps.user && !this.props.user){\n        this.setUserInfo(null,null,null)\n      }\n    }\n  }\n\n  showModal = () => {\n    this.setState({ showCharacterDefinitions: true });\n  };\n\n  hideModal = () => {\n    this.setState({ showCharacterDefinitions: false });\n  };\n\n\tcheckAnswer(correct_response) {\n\t\treturn correct_response.word_text === this.state.userResponse\n\t}\n\n  /*setAudio(phrase_id) {\n    var Sounds\n     Sounds = new Howl({\n         src: [\"/audio/sentences/\" + phrase_id + \".m4a\"]\n      })\n  \n    return Sounds\n  }*/\n\n  /*playSound(){\n    if(this.state.audio){\n        this.state.audio.play()\n    }\n  }*/\n\n  /*stopSound(){\n    if(this.state.audio){\n        this.state.audio.stop()\n    }\n\n  }*/\n\n  playAudio(){\n    var msg = new SpeechSynthesisUtterance();\n    msg.text = this.state.audio;\n    msg.lang = \"zh\"\n    msg.rate = 0.75\n    msg.pitch = 1;\n    window.speechSynthesis.speak(msg);\n}\n\n  getFontColor(word){\n    var color = 'black'\n    if(this.state.isSubmitted){\n      color = this.checkAnswer(word) ? 'green' : 'red'\n    }\n    return color\n  }\n\n  submitAnswer(makeAttempt, refetch, userId, wordId, correctResponse, time_fetched, isCorrect, interval_id){\n    if(!this.state.isSubmitted){\n      makeAttempt({variables:{\n        word_id: wordId,\n        interval_id: isCorrect ? interval_id + 1 : interval_id\n      }})\n    }\n     else if(this.state.isSubmitted && this.state.showAnswer){\n      this.setState({\n          showAnswer: false,\n          showPinyin: false,\n          isSubmitted: false,\n          userResponse: '',\n          timeFetched: time_fetched,\n          showCharacterDefinitions: false,\n          lastSentence: null\n      }, () => {/*this.stopSound()*/})\n    } else{\n        this.setState({\n        showAnswer: true,\n        showPinyin: true,\n        userResponse: correctResponse,\n        }, () => {this.playAudio()})\n    }\n  }\n\n  getText(text){\n    return(\n      <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n      <p style={{fontSize: \"calc(10px + 2vmin)\"}}>{text.english}</p> \n      </div>\n      )\n  }\n\n  getUserInterval(showAnswer, isCorrect, current_interval){\n    var progress = current_interval\n\n    if(showAnswer && isCorrect){\n      progress = progress + 1\n    }\n    return progress\n  }\n\n  editWord(word){\n    console.log(this.props)\n    console.log(this.context)\n    this.props.history.push({\n      pathname: '/wordedit',\n      state: {\n        word_id: word.word_id,\n        word_text: word.word_text,\n        pinyin: word.pinyin,\n        english: word.english\n      }  \n    })\n  }\n\n  playDashboard(userId,role){\n    return(\n      <Query query={GET_SENTENCE} variables={{userId: userId}}>\n          {({ loading, error, data, refetch }) => {\n            \n            if (loading) return <div style={{\"marginTop\": \"25%\",marginLeft: \"45%\"}}>Loading</div>\n            if (error) return <div style={{\"marginTop\": \"25%\",marginLeft: \"45%\"}}>error</div>\n            const nextSentence = this.state.lastSentence || data.getNextSentence\n            const sentenceParts = nextSentence.display_text.split(\"#\")\n            const num_occurences = (nextSentence.display_text.match(/#/g) || []).length;\n            var occurences_displayed = num_occurences\n            //Don't rerender when waiting for refetch or when there is no result\n            if (nextSentence && this.state.timeFetched === nextSentence.time_fetched)  return <div/>\n            if(data.getNextSentence && data.getCurrentProgress){\n              const wordId = parseInt(nextSentence.word_taught.word_id)\n              const fontSize =  nextSentence.raw_text.length <= 24 ? 40 : 20\n              const buttonMarginStart = nextSentence.raw_text.length <= 20 ? \"3em\" : \"1.5em\"\n              console.log(nextSentence.raw_text.length, fontSize)\n              const userInterval = this.getUserInterval(this.state.showAnswer,this.state.isCorrect, nextSentence.word_taught.interval_id)\n                return(\n                  <div style={{display: \"flex\", flexDirection: \"row\", \"width\": \"100%\"}}>\n                  <div style={{\"flexGrow\": \"4\", \"paddingTop\": \"20%\"}}>\n                  {role === \"TESTER\" && (<p style={{fontSize: \"12px\", \"marginBottom\": \"20px\"}}>You are currently not logged in. Log in to save your progress.</p>)}\n                  {role === \"STUDENT\" && (<linkbutton style={{\"marginRight\": \"15px\",\"fontSize\": \"10px\"}} onClick={() => this.editWord(nextSentence.word_taught)}>Edit</linkbutton>)}\n                  <div style={{display: \"inline-block\", \"textAlign\": \"center\"}}>\n                    <ProgressBar currentTimeInterval={userInterval} />\n                     <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                      {this.state.showAnswer && <button  style={{\"width\": \"25px\", \"height\": \"25px\", \"marginRight\": \"10px\", \"marginBlockStart\": \"1.8em\"}} onClick={() => this.playAudio()}><img style={{\"width\": \"100%\"}} alt=\"replay audio\" src=\"speaker_icon.svg\"/></button>}\n                     {this.state.showPinyin ? <p style={{fontSize: \"calc(10px + 2vmin)\"}}>{nextSentence.pinyin}</p> : this.getText(nextSentence)}\n                      </div>\n                     <Mutation mutation={MAKE_ATTEMPT} refetchQueries={[{query: GET_SENTENCE, variables: {userId: userId}}]}\n                          update={(store) => {\n                            if(!this.state.isSubmitted){\n                              this.setState({\n                              isSubmitted: true,\n                              showAnswer: this.checkAnswer(nextSentence.word_taught),\n                              showPinyin: this.checkAnswer(nextSentence.word_taught),\n                              isCorrect: this.checkAnswer(nextSentence.word_taught),\n                              audio: nextSentence.raw_text,\n                              lastSentence: nextSentence\n                              }, () => {\n                                if(this.checkAnswer(nextSentence.word_taught)){\n                                  this.playAudio()\n                                }\n                              })\n                            }\n\n                            }\n                          }\n                         >\n                          {makeAttempt => (\n                            <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n                            {\n                              sentenceParts.map(part => {\n                                occurences_displayed = occurences_displayed === num_occurences ? 0 : occurences_displayed + 1\n                                return(\n                                  <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                                  <p style={{\"fontSize\": fontSize + \"px\", \"marginBlockStart\": \"0.95em\"}}>{part}</p>\n                                  {occurences_displayed < num_occurences ?\n                                    (\n                                        <input style={{minWidth: `${nextSentence.word_taught.word_text.length * fontSize}px`, maxWidth: `${nextSentence.word_taught.word_text.length * fontSize + (this.state.userResponse.length - nextSentence.word_taught.word_text.length || 0) * 10}px`,fontSize: (fontSize - 3) + \"px\", margin: \"15px 5px 15px 5px\", color: this.getFontColor(nextSentence.word_taught), height: fontSize + \"px\", \"marginBlockStart\": \"1em\"}} value={this.state.userResponse} onChange={e => this.setState({ userResponse: e.target.value })}\n                                        onKeyDown={(e) => {\n                                        if (e.key === 'Enter') {\n                                          this.submitAnswer(makeAttempt, refetch, userId, wordId, (nextSentence.word_taught.word_text), nextSentence.time_fetched, this.checkAnswer(nextSentence.word_taught), nextSentence.word_taught.interval_id)\n                                        }\n                                        }}\n                                        />\n                                      ) : null\n                                  }\n                                  \n                                  </div>                                  \n                                  )\n                              })\n          \n                           }\n                            <button\n                              style={{margin: \"15px 5px 15px 5px\", height: fontSize, marginBlockStart: buttonMarginStart, fontSize: \"14px\"}}\n                              onClick={() => \n                                {\n                                  this.submitAnswer(makeAttempt, refetch, userId, wordId, (nextSentence.word_taught.word_text), nextSentence.time_fetched, this.checkAnswer(nextSentence.word_taught), nextSentence.word_taught.interval_id)\n                                }\n                              }\n                            >\n                            {!this.state.isSubmitted ? \"Submit Answer\" : (this.state.showAnswer ? \"Next Phrase\" : \"Show Answer\")}\n                            </button>\n                            </div>\n                          )}\n                    </Mutation>\n                  </div>\n                  <div>\n                    {(this.state.showPinyin ? <p>{nextSentence.word_taught.pinyin}</p> : this.getText(nextSentence.word_taught))}\n                  </div>\n              </div>\n              <div style={{\"flexGrow\": 1, \"backgroundColor\": \"lightslategray\"}}>\n                 <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"right\"}}>\n                      <p style={{fontSize: \"14px\"}}>{\"New Words Seen: \" + data.getCurrentProgress.new_words_seen + \"/\" + data.getCurrentProgress.total_word_count}</p>\n                      <p style={{fontSize: \"14px\"}}>{\"Words Learned: \" + data.getCurrentProgress.words_learned + \"/\" + data.getCurrentProgress.total_word_count}</p>\n                      <p style={{fontSize: \"14px\"}}>{\"Cards Completed: \" + data.getCurrentProgress.intervals_completed}</p>\n                      {/*<div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\"}}>{\"Simplified\"}</p> \n                        <Switch switchId={`simplified-traditional-switch`} isDisabled={false} isOn={this.state.showTraditional} handleToggle={() => this.setState(prevState => ({showTraditional: !prevState.showTraditional}))} />\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\", \"marginLeft\": \"5%\"}}>{\"Traditional\"}</p> \n                      </div>*/}\n                      <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\", \"marginTop\": \"20px\"}}>\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\"}}>{\"English\"}</p> \n                        <Switch switchId={`english-pinyin-switch`} isDisabled={!this.state.showAnswer} isOn={this.state.showPinyin} handleToggle={() => this.setState(prevState => ({showPinyin: !prevState.showPinyin}))} />\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\", \"marginLeft\": \"5%\"}}>{\"Pinyin\"}</p> \n                      </div>\n                </div>\n              </div>\n              </div>\n            ) \n         }\n          else return <div style={{display: \"flex\", justifyContent: \"center\", \"width\": \"100%\", \"marginTop\": \"25%\"}}>{!!getCookie('access-token') && (data && data.getCurrentProgress && data.getCurrentProgress.words_learned === 150)  ? (<p>{\"Demo Complete\"}</p>) : !getCookie('access-token') && (<p>{\"Please login to continue\"}</p>)}</div>\n         }}\n        </Query>\n    )\n\n  }\n\n   _confirm = async data => {\n    this.props.refetchUser()\n  }\n\n\trender() {\n    console.log(this.state)\n\t  const {userId, role} = this.state.user\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header-play\">\n          {userId !==null && typeof userId !== 'undefined' ? this.playDashboard(userId, role): \n              <Mutation mutation={CREATE_USER}\n                onCompleted={data => this._confirm(data)}\n                >\n              {createUser => (\n              <div style={{\"marginTop\": \"25%\",marginLeft: \"30%\"}}>\n              <p>Remember to set your keyboard's language to Chinese</p>\n              <button onClick={()=> createUser({variables:{user_name: \"\", email: \"\", password: \"\", role: \"TESTER\"}})}>Start Learning</button>\n              </div>\n              )}\n            </Mutation>}\n\t      </header>\n          <footer>\n            <span><b>Contact:</b> <a href=\"mailto:clozechinese@gmail.com\">clozechinese@gmail.com</a></span> \n          </footer>\n\t    </div>\n\t  );\t\t\n\t}\n}\n\n\n\n\n\nexport default withRouter(Play);\n","import React, { Component } from 'react'\n\n\n\n\nclass About extends Component {\n\n  render() {\n    return(\n      <div className=\"App\">\n        <header className=\"App-header-about\">\n        <p><b>Me:</b></p>\n        <p>\n        My name is Cory and I am learning Mandarin Chinese. I’m a big fan of fill-in-the-blanks (cloze) flashcards and have used them to learn other languages, but I couldn’t find any such apps for Chinese that appealed to me. I decided to make my own.\n        </p>\n        <p><b>This App:</b></p>\n        <p>\n\t\tThis app uses over 5000 mined sentences, spaced repetition, and progressively adds (over 7000) new words. All the words you will see in the sentences around the blank space are either words that you've seen before or HSK 1 words.\n        </p>\n\t\t<span><p><b>Contact me:</b></p> <a href=\"mailto:clozechinese@gmail.com\" style={{\"color\":\"aquamarine\"}}>clozechinese@gmail.com</a></span> \n\t\t<p>Please email me if you have any feedback or if you could get me in touch with a potential collaborator. I would be happy to chat with you!</p>\n        </header>\n      </div>\n    )\n  }\n\n}\n\nexport default About","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './Login'\nimport Header from './Header'\n//import Author from './Author'\n//import Editor from './Editor'\nimport Words from './Words'\nimport WordEdit from './WordEdit'\nimport Play from './Play'\nimport About from './About'\n\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\n\nconst GET_USER = gql`\nquery getUser {\n  me {\n    user_id\n    user_name\n    user_role\n    user_password\n  }\n}\n`\n\n\nclass App extends Component {\n\n  render() {\n    return(\n      <div>\n      <Query query={GET_USER}>\n      {({ loading, error, data, refetch }) => {\n        if (loading) return <div>Fetching</div>\n        if (error) return <div>error</div>\n        const user = data.me\n        return(\n        <div>\n          <Header user={user} refetchUser={refetch}/>\n          <Switch>\n            <Route exact path=\"/\" render={() => (<Play  user={user} refetchUser={refetch}/> )} />\n            {/*user && user.role === 'ADMIN' && (<Route exact path=\"/author\" component={Author} />)*/}\n            {/*user && user.role === 'ADMIN' && (<Route exact path=\"/editor\" component={Editor} />)*/}\n            {user && user.user_role === 'ADMIN' && (<Route exact path=\"/words\" component={Words} />)}\n            <Route exact path=\"/wordedit\" component={WordEdit} />\n            <Route exact path=\"/login\" render={() => (<Login user={user} refetchUser={refetch}/>)} />\n            <Route exact path=\"/about\" component={About} />\n          </Switch>\n        </div>\n        )\n      }}\n      </Query>\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from 'react-apollo'\n//import { onError } from \"apollo-link-error\";\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { BrowserRouter } from 'react-router-dom'\n//import { setContext } from 'apollo-link-context'\n//import { getToken } from './constants'\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n  credentials: 'include'\n\n})\n\n\n/*const authLink = setContext((_, { headers }) => {\n  const token = getToken()\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})*/\n/*const errorLink = onError(({ graphQLErrors, networkError }) => {\n    console.log(graphQLErrors, networkError)\n    if (graphQLErrors){\n      graphQLErrors.map(({ message, locations, path }) => {\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n        )\n        \n\n      })\n    }\n\n\n  })*/\n\nconst client = new ApolloClient({\n  //link: authLink.concat(httpLink),\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\nserviceWorker.unregister();\n\n"],"sourceRoot":""}