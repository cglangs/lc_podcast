{"version":3,"sources":["components/Login.js","utils.js","components/Header.js","constants.js","components/Switch.js","components/Author.js","components/Editor.js","components/Words.js","components/WordEdit.js","components/ProgressBar.js","components/Modal.js","components/Play.js","components/About.js","components/Citations.js","components/App.js","serviceWorker.js","index.js"],"names":["SIGNUP_MUTATION","gql","UPGRADE_MUTATION","LOGIN_MUTATION","Login","state","isLogin","email","password","user_name","userId","role","this","props","user","_id","setUserInfo","parseInt","setState","className","value","onChange","e","target","type","placeholder","mutation","variables","onCompleted","data","_confirm","onError","error","console","log","message","loading","onClick","handleLogin","disabled","length","substring","lastIndexOf","event","preventDefault","history","push","window","location","reload","Component","withRouter","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","c","charAt","indexOf","Header","isLoggedIn","style","to","punctuations","id","text","colors","times_used","color","Switch","switchId","isOn","handleToggle","isDisabled","checked","background","htmlFor","GET_LEVEL_WORDS","ADD_SENTENCE","REPLACE_SENTENCE","customStyles","option","styles","backgroundColor","Author","baseState","SentenceElements","formerSentenceRawText","formerSentenceCleanText","selectedWordId","wordToTeach","word_id","containsWordToTeach","points","punctuationMode","selectedPunctuationId","pinyin","english","italics","replaceMode","interval","sentenceElements","level","interval_order","addable_words","teachable_words","clean_sentences","words_left","addSentence","sentenceWords","filter","element","hasOwnProperty","sentenceWordListSimplified","map","word","cleanSentenceTextSimplified","join","includes","alert","getSentenceVariables","sentenceContainedWordListSimplified","rawSentenceTextSimplified","displaySentenceTextSimplified","replace","RegExp","cleanSentenceTextTraditional","alt_text","rawSentenceTextTraditional","displaySentenceTextTraditional","shouldCall","resultObj","wordToTeachText","wordToTeachId","currentInterval","Object","assign","newElement","prevState","slice","minimum_usage","max_usage","find","colorType","query","refetch","wordArray","get_word_array","min_length","max_length","fontSize","popElement","bind","hidden","label","mark","options","appendElement","getColor","width","update","store","submitSentenceData","sentences","sentence","clean_text","GET_DROPDOWNS","GET_SENTENCE_LIST","Editor","selectedLevel","selectedInterval","userName","getIntervalsAndLevels","levels","selected","intervals","current_index","display_text_copy","display_text","words_contained","sort","previous","next","contains_order","word_taught","Word","pathname","raw_text","levelNumber","intervalOrder","getDropdowns","getSentenceList","parseSentence","GET_WORDS","Words","word_list","Level","all_words","level_number","editWord","EDIT_WORD","WordEdit","ProgressBar","stepAtInterval","currentTimeInterval","dotStyleEmpty","height","dotGroup","dotStyleFullInterval1","dotStyleFullInterval2","dotStyleFullInterval3","display","justifyContent","flexDirection","textToShow","displayNewStatus","Modal","handleClose","show","characters","showHideClassName","char","MAKE_ATTEMPT","CREATE_USER","GET_SENTENCE","Play","showModal","showCharacterDefinitions","hideModal","a","refetchUser","showAnswer","showPinyin","showTraditional","isSubmitted","userResponse","isCorrect","audio","timeFetched","lastSentence","prevProps","correct_response","Howl","src","play","stop","checkAnswer","makeAttempt","sentenceId","correctResponse","time_fetched","stopSound","playSound","flexDirectioion","thisUser","progress","STEP_AT_INTERVAL","CURRENT_TIME_INTERVAL","marginLeft","nextSentence","getNextSentence","getCurrentProgress","userIntervalStep","getUserIntervalStep","current_learners","userInterval","getUserInterval","alt","getText","refetchQueries","setAudio","alt_display_text","substr","margin","getFontColor","onKeyDown","key","submitAnswer","words_learned","total_word_count","intervals_completed","playDashboard","createUser","href","About","Citations","GET_USER","App","me","exact","path","render","component","Boolean","hostname","match","httpLink","createHttpLink","uri","credentials","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec2de183.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Mutation} from 'react-apollo'\nimport { withRouter } from 'react-router-dom';\n\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $user_name: String!) {\n    CreatePermanentUser(email: $email, password: $password, user_name: $user_name) {\n      _id\n      user_name\n      password\n      token\n      role\n    }\n  }\n`\nconst UPGRADE_MUTATION = gql`\n  mutation UpgradeMutation($email: String!, $password: String!, $user_name: String!, $userId: Int!) {\n    UpgradeUser(email: $email, password: $password, user_name: $user_name, userId: $userId) {\n      _id\n      user_name\n      password\n      token\n      role\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    Login(email: $email, password: $password) {\n      _id\n      user_name\n      password\n      token\n      role\n    }\n  }\n`\n\nclass Login extends Component {\n  state = {\n    isLogin: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    user_name: '',\n    userId: null,\n    role: \"STUDENT\"\n  }\n\n  componentDidMount(){\n    if(this.props.user){\n      const {user_name, _id ,role} = this.props.user\n      this.setUserInfo(user_name, parseInt(_id), role)\n    }\n  }\n\n  setUserInfo(user_name, userId, role){\n    this.setState({user_name, userId: userId, role: role})\n\n  }\n\n render() {\n    const { isLogin, email, password, user_name, userId, role} = this.state\n    return (\n    <div>\n      <h4>{isLogin ? 'Login' : 'Sign Up'}</h4>\n\n      <div className=\"flex flex-column\">\n        {!isLogin && (\n          <input\n            value={user_name}\n            onChange={e => this.setState({ user_name: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n        )}\n        <input\n          value={email}\n          onChange={e => this.setState({ email: e.target.value })}\n          type=\"text\"\n          placeholder=\"Your email address\"\n        />\n        <input\n          value={password}\n          onChange={e => this.setState({ password: e.target.value })}\n          type=\"password\"\n          placeholder=\"Choose a safe password\"\n        />\n      </div>\n      <div>\n      <Mutation\n        mutation={isLogin ? LOGIN_MUTATION : role === 'TESTER' ? UPGRADE_MUTATION : SIGNUP_MUTATION}\n        variables={{ email, password, user_name, userId}}\n        onCompleted={data => this._confirm()}\n        onError={(error) => console.log(error.message)}\n      >\n        {(mutation, { loading, error }) => (\n          <div>\n            <button\n              type=\"button\"\n              onClick={e => this.handleLogin(e, mutation)}\n              disabled={!this.state.email.length || !this.state.password.length || (!this.state.user_name.length && !this.state.isLogin)}\n            >\n              {isLogin ? 'login' : 'create account'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isLogin: !this.state.isLogin })}\n            >\n            {isLogin ? 'need to create an account?' : 'already have an account?'}\n\n            </button>\n            {error && <p>{error.message.substring(error.message.lastIndexOf(':') + 1)}</p>}\n          </div>\n        )}\n      </Mutation>\n      </div>\n    </div>\n  )\n\n }\n\n\n handleLogin(event, mutation){\n  event.preventDefault()\n  mutation()\n}\n\n _confirm() {\n  //this.props.refetchUser()\n  this.props.history.push('/')\n  window.location.reload(true);\n}\n\n\n}\n\n\nexport default withRouter(Login)","export const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getCookie} from '../utils'\n\nclass Header extends Component {\n\n  render() {\n    const isLoggedIn = !!getCookie('access-token');\n\n    return (\n      <div>\n        <div style={{\"marginBottom\": \"10px\"}}>Cloze Chinese Prototype</div>\n        <Link to=\"/\">\n            Learn\n          </Link>\n          <div>\n        {isLoggedIn && this.props.user && this.props.user.role === 'ADMIN' && (\n          <div>\n            <div className=\"flex\">\n              <Link to=\"/author\">\n                author\n              </Link>\n            </div>\n            <div className=\"flex\">\n              <Link to=\"/editor\">\n                editor\n              </Link>\n            </div>\n            <div className=\"flex\">\n              <Link to=\"/words\">\n                words\n              </Link>\n            </div>\n          </div>\n          )}\n          </div>\n        <div>  \n          <Link to=\"/about\">\n              about\n          </Link>\n        </div> \n        <div>          \n          <Link to=\"/citations\">\n              citations\n          </Link>\n        </div>\n        <div className=\"flex flex-fixed\">\n          {isLoggedIn && this.props.user && this.props.user.role !== 'TESTER' ? (\n            <div\n              onClick={() => {\n                document.cookie = \"access-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n                document.cookie = \"refresh-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n                this.props.history.push('/')\n                window.location.reload(true);\n\n                //this.props.refetchUser()\n              }}\n            >\n              logout\n            </div>\n          ) : (\n            <Link to=\"/login\">\n              login\n            </Link>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header)","export const punctuations = [\n\t{id: 1, text: '，', type: 'COMMA'},\n\t{id: 2, text: '。', type: 'PERIOD'},\n\t{id: 3, text: '”', type: 'QUOTE'},\n\t{id: 4, text: '！', type: 'EXCLAMATION'},\n\t{id: 5, text: '？', type: 'QUESTION'},\n\t{id: 6, text: '：', type: 'COLON'},\n\t{id: 7, text: '0', type: 'ZERO'},\n\t{id: 8, text: '1', type: 'ONE'},\n\t{id: 9, text: '2', type: 'TWO'},\n\t{id: 10, text: '3', type: 'THREE'},\n\t{id: 11, text: '4', type: 'FOUR'},\n\t{id: 12, text: '5', type: 'FIVE'},\n\t{id: 13, text: '6', type: 'SIX'},\n\t{id: 14, text: '7', type: 'SEVEN'},\n\t{id: 15, text: '8', type: 'EIGHT'},\n\t{id: 16, text: '9', type: 'NINE'},\n\t{id: 17, text: ' ', type: 'SPACE'},\n\t{id: 18, text: 'Smith', type: 'NAME'}\n]\n\nexport const colors = [\n\t{times_used: 0, color: 'lightblue'},\n\t{times_used: 1, color: 'pink'},\n\t{times_used: 2, color: 'yellow'},\n\t{times_used: 3, color: 'lightgreen'},\n\t{times_used: 4, color: 'coral'},\n\t{times_used: 5, color: 'blueviolet'}\n]","import React from 'react';\nimport '../styles/Switch.css';\n\nconst Switch = ({switchId, isOn, handleToggle, isDisabled }) => {\n  return (\n    <>\n      <input\n        checked={isOn}\n        onChange={handleToggle}\n        className=\"react-switch-checkbox\"\n        id={switchId ||`react-switch-new`}\n        type=\"checkbox\"\n        disabled={isDisabled}\n      />\n      <label\n        style={{ background: isOn && '#06D6A0' }}\n        className=\"react-switch-label\"\n        htmlFor={switchId ||`react-switch-new`}\n      >\n        <span className={`react-switch-button`} />\n      </label>\n    </>\n  );\n};\n\nexport default Switch;","import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Mutation, Query} from 'react-apollo';\nimport '../styles/App.css';\nimport {punctuations, colors} from '../constants.js'\nimport Switch from \"./Switch\";\nimport Select from \"react-select\";\n\n\nexport const GET_LEVEL_WORDS = gql`\n  query GetLevelWords{\n  Author{\n    level{\n      level_number\n      points\n      minimum_usage\n      teachable_words{\n        text\n        alt_text\n        word_id\n        level{\n          points\n        }\n      }\n      addable_words{\n        text\n        alt_text\n        word_id\n        times_used\n        level{\n          points\n        }\n      }\n    }\n    interval{\n      sentences{\n        clean_text\n      }\n      interval_order\n      seconds\n      min_length\n      max_length\n    }\n  }\n}\n`\n\nconst ADD_SENTENCE = gql`\n  mutation addsentence($rawSentenceTextSimplified: String!, $cleanSentenceTextSimplified: String!, $displaySentenceTextSimplified: String!,$rawSentenceTextTraditional: String!, $cleanSentenceTextTraditional: String!, $displaySentenceTextTraditional: String!, $pinyin: String!, $english: String!, $italics: String!, $wordToTeachId: Int!, $sentenceContainedWordListSimplified: [String!], $currentInterval: Int!, $shouldCall: Boolean!) {\n    CreateSentence(raw_text: $rawSentenceTextSimplified, clean_text: $cleanSentenceTextSimplified, display_text: $displaySentenceTextSimplified, alt_raw_text: $rawSentenceTextTraditional, alt_clean_text: $cleanSentenceTextTraditional, alt_display_text: $displaySentenceTextTraditional, pinyin: $pinyin, english: $english, italics: $italics) {\n      raw_text\n    }\n    AddSentenceLevel(from: {raw_text:  $rawSentenceTextSimplified} to: {level_number: 1}){\n      from {raw_text}\n      to {level_number}\n    }\n    AddSentenceWord_taught(from: {raw_text: $rawSentenceTextSimplified} to: {word_id: $wordToTeachId}){\n      from {raw_text}\n      to {text}\n    }\n    AddSentenceInterval(from: {raw_text: $rawSentenceTextSimplified} to: {interval_order: $currentInterval}){\n      from {raw_text}\n      to {interval_order}\n    }\n    AddSentenceDependencies(src_sentence: $rawSentenceTextSimplified, dest_words: $sentenceContainedWordListSimplified){\n      raw_text\n      display_text\n    }\n    IncrementInterval(should_call: $shouldCall)\n  }\n\n`\n\nconst REPLACE_SENTENCE = gql`\n  mutation replacesentence($rawSentenceTextSimplified: String!, $cleanSentenceTextSimplified: String!, $displaySentenceTextSimplified: String!,$rawSentenceTextTraditional: String!, $cleanSentenceTextTraditional: String!, $displaySentenceTextTraditional: String!, $pinyin: String!, $english: String!, $italics: String! $wordToTeachId: Int!, $sentenceContainedWordListSimplified: [String!], $currentInterval: Int!, $formerSentenceRawText: String!) {\n    CreateSentence(raw_text: $rawSentenceTextSimplified, clean_text: $cleanSentenceTextSimplified, display_text: $displaySentenceTextSimplified, alt_raw_text: $rawSentenceTextTraditional, alt_clean_text: $cleanSentenceTextTraditional, alt_display_text: $displaySentenceTextTraditional, pinyin: $pinyin, english: $english,, italics: $italics) {\n      raw_text\n    }\n    AddSentenceLevel(from: {raw_text:  $rawSentenceTextSimplified} to: {level_number: 1}){\n      from {raw_text}\n      to {level_number}\n    }\n    AddSentenceWord_taught(from: {raw_text: $rawSentenceTextSimplified} to: {word_id: $wordToTeachId}){\n      from {raw_text}\n      to {text}\n    }\n    AddSentenceInterval(from: {raw_text: $rawSentenceTextSimplified} to: {interval_order: $currentInterval}){\n      from {raw_text}\n      to {interval_order}\n    }\n    AddSentenceDependencies(src_sentence: $rawSentenceTextSimplified, dest_words: $sentenceContainedWordListSimplified){\n      raw_text\n      display_text\n    }\n    TransferUserProgress(src_sentence: $formerSentenceRawText, dest_sentence: $rawSentenceTextSimplified){\n      raw_text\n    }\n    DeleteSentence(raw_text: $formerSentenceRawText){\n      raw_text\n    }\n  }\n\n`\nconst customStyles = {\n\n  option: (styles, { data}) => {\n    return {\n      ...styles,\n      color: \"black\",\n      backgroundColor: data.color\n    }\n  }\n\n}\n\nclass Author extends Component {\n  constructor(props){\n    super(props)\n    this.baseState = {\n        SentenceElements: [],\n        formerSentenceRawText: null,\n        formerSentenceCleanText: null,\n        selectedWordId: null,\n        wordToTeach: {text: '', word_id: null},\n        containsWordToTeach: 0,\n        points: 0,\n        punctuationMode: false,\n        selectedPunctuationId: null,\n        pinyin: '',\n        english: '',\n        italics: '',\n        replaceMode: false,\n        interval: null\n      }\n    if(typeof props.location.state === 'undefined'){\n      this.state = this.baseState\n    } else {\n        this.state = {\n          SentenceElements: props.location.state.sentenceElements,\n          formerSentenceRawText: props.location.state.formerSentenceRawText,\n          formerSentenceCleanText: props.location.state.formerSentenceCleanText,\n          selectedWordId: null,\n          wordToTeach: props.location.state.wordToTeach,\n          containsWordToTeach: props.location.state.containsWordToTeach,\n          points: props.location.state.points,\n          punctuationMode: false,\n          selectedPunctuationId: null,\n          pinyin: props.location.state.pinyin,\n          english: props.location.state.english,\n          italics: props.location.state.italics,\n          interval: props.location.state.interval,\n          replaceMode: true\n        }\n      }\n  }\n\n  get_word_array(level, interval_order) {\n    let arr = []\n    const wordToTeach = this.state.wordToTeach\n    if(wordToTeach && wordToTeach.text.length && interval_order === 1){\n        arr = [wordToTeach, ...level.addable_words]\n      } else if (wordToTeach && wordToTeach.text.length && interval_order > 1){\n          arr = level.addable_words\n      } else{\n        arr = level.teachable_words\n      }\n    return arr\n  }\n\n\n  submitSentenceData(clean_sentences, interval_order, words_left, addSentence){\n    const SentenceElements = this.state.SentenceElements\n    const sentenceWords = SentenceElements.filter( element => element.hasOwnProperty('word_id') )\n    const sentenceWordListSimplified = sentenceWords.map(word => word.text)\n    const cleanSentenceTextSimplified = sentenceWordListSimplified.join('')\n\n    if(clean_sentences.includes(cleanSentenceTextSimplified) && cleanSentenceTextSimplified !== this.state.formerSentenceCleanText){\n      alert(\"Already used this sentence. Please change it.\")\n    }\n    else{\n        addSentence({ variables: this.getSentenceVariables(SentenceElements, sentenceWords,sentenceWordListSimplified,cleanSentenceTextSimplified, interval_order, words_left)})\n    }\n  }\n\n  getSentenceVariables(SentenceElements, sentenceWords, sentenceWordListSimplified,cleanSentenceTextSimplified, interval_order, words_left) {\n    const { wordToTeach, pinyin, english, italics, formerSentenceRawText, replaceMode} = this.state\n\n    const sentenceContainedWordListSimplified = sentenceWordListSimplified.filter(word => word !== wordToTeach.text)\n    const SentenceElementListSimplified = SentenceElements.map(element => element.text)\n    const rawSentenceTextSimplified = SentenceElementListSimplified.join('')\n    const displaySentenceTextSimplified = rawSentenceTextSimplified.replace(new RegExp(wordToTeach.text, 'g'), '#')\n\n    const sentenceWordListTraditional = sentenceWords.map(word => word.alt_text)\n    const cleanSentenceTextTraditional = sentenceWordListTraditional.join('')\n    const SentenceElementListTraditional = SentenceElements.map(element => element.alt_text || element.text)\n    const rawSentenceTextTraditional = SentenceElementListTraditional.join('')\n    const displaySentenceTextTraditional = rawSentenceTextTraditional.replace(new RegExp(wordToTeach.alt_text, 'g'), '#')\n\n    const wordToTeachText = wordToTeach.text\n    const wordToTeachId = wordToTeach.word_id\n    const currentInterval = interval_order\n    const shouldCall =  words_left === 1 && currentInterval < 5\n\n    var resultObj ={rawSentenceTextSimplified,cleanSentenceTextSimplified, displaySentenceTextSimplified,rawSentenceTextTraditional,cleanSentenceTextTraditional, displaySentenceTextTraditional, pinyin, english, italics, wordToTeachText,wordToTeachId,sentenceContainedWordListSimplified,currentInterval}\n\n    if(replaceMode){\n      Object.assign(resultObj,{formerSentenceRawText})\n    } else{\n      Object.assign(resultObj,{shouldCall})\n    }\n\n    return resultObj\n  }\n\n  appendElement(newElement) {\n    if(!newElement.hasOwnProperty('word_id')){\n      this.setState(prevState => \n      ({\n        SentenceElements: [...prevState.SentenceElements, newElement]\n      })) \n    } else {\n      this.setState(prevState => \n        ({\n          points: prevState.points + newElement.level.points, \n          containsWordToTeach: newElement.word_id === this.state.wordToTeach.word_id ? prevState.containsWordToTeach + 1 : prevState.containsWordToTeach,\n          SentenceElements: [...prevState.SentenceElements, newElement]\n        }))\n    }\n  }\n\n  popElement() {\n    if(!this.state.SentenceElements[this.state.SentenceElements.length - 1].hasOwnProperty('word_id')){\n     this.setState(prevState => \n      ({\n        SentenceElements: prevState.SentenceElements.slice(0,-1)\n      }))     \n    } else {\n    this.setState(prevState => \n      ({\n        points: prevState.points - prevState.SentenceElements[prevState.SentenceElements.length - 1].level.points, \n        containsWordToTeach: prevState.SentenceElements[prevState.SentenceElements.length - 1].word_id === this.state.wordToTeach.word_id ? prevState.containsWordToTeach - 1 : prevState.containsWordToTeach,\n        SentenceElements: prevState.SentenceElements.slice(0,-1)\n      }))\n    }\n  }\n\n  getColor(word, minimum_usage){\n    var color = 'white'\n    const max_usage = minimum_usage + 5\n    if(word.hasOwnProperty('times_used')){\n      color = colors.find((colorType) => colorType.times_used + minimum_usage === parseInt(word.times_used) || (colorType.times_used === 5 && parseInt(word.times_used) >= max_usage)).color\n    }\n    return color\n  }\n\n  render() {\n    const { SentenceElements, wordToTeach, points, selectedWordId, containsWordToTeach, punctuationMode,selectedPunctuationId} = this.state\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Query query={GET_LEVEL_WORDS}>\n          {({ loading, error, data, refetch }) => {\n              if (loading) return <div>Fetching</div>\n              if (error) return <div>Error</div>\n              const interval = this.state.interval || data.Author[0].interval\n              const wordArray = this.get_word_array(data.Author[0].level, interval.interval_order)\n              const minimum_usage = parseInt(data.Author[0].level.minimum_usage)\n               return (\n                <div>\n                <div className=\"Author-dashboard\">\n                  <p>{\"Interval: \" + interval.interval_order}</p>\n                  <p>{\"Minimum points: \" + interval.min_length}</p>\n                  <p>{\"Maximum points:: \" + interval.max_length}</p>\n                  <p>{\"Current Points: \" + points}</p>\n                </div>\n                <p>Word being learned: {wordToTeach.text}</p>\n                <div>\n                <p style={{fontSize: \"30px\"}}>{SentenceElements.length ?  SentenceElements.map(word => word.text).join('') : null}</p>\n               <button\n                onClick={this.popElement.bind(this)}\n                hidden={SentenceElements.length === 0}\n                >\n                Backspace\n                </button>\n                </div>\n                <Switch isDisabled={false} isOn={punctuationMode} handleToggle={() => \n                  this.setState(prevState => ({punctuationMode: !prevState.punctuationMode}))} />\n                  {punctuationMode ?\n                    (\n                      <div>\n                    <Select\n                    styles={customStyles}\n                    value={{value: selectedPunctuationId, label: selectedPunctuationId && punctuations.find(mark=> mark.id === selectedPunctuationId).text}}\n                    options={punctuations.map(mark =>  { return { label: mark.text, value: mark.id}})}\n                    onChange={option => this.setState({selectedPunctuationId: parseInt(option.value)})}>\n                    </Select>    \n                   <button onClick={() => this.appendElement(punctuations.find(mark=> mark.id === selectedPunctuationId))}>\n                    Add\n                    </button>\n                    </div>\n                  ) : (\n                    <div>\n                  <Select\n                    styles={customStyles}\n                    value={{value: selectedWordId, label: selectedWordId && wordArray.find(word=> word.word_id === selectedWordId).text}}\n                    options={wordArray.map(word =>  { return { label: word.text, value: word.word_id, color: this.getColor(word,minimum_usage)}})}\n                    onChange={option => this.setState({selectedWordId: parseInt(option.value)})}>\n                    </Select>                    \n                     <button\n                      onClick={wordToTeach.text.length ? () => this.appendElement(wordArray.find(word=> word.word_id === selectedWordId)) : \n                        () => {this.setState({wordToTeach: wordArray.find(word=> word.word_id === selectedWordId)})}}\n                      >\n                      {wordToTeach.text.length ? \"Add\" : \"Learn\"}\n                      </button>\n                    </div>\n                    )\n                }\n                  <div>\n                    <input\n                      value={this.state.pinyin}\n                      onChange={e => this.setState({ pinyin: e.target.value })}\n                      type=\"pinyin\"\n                      placeholder=\"Enter sentence's pinyin\"\n                      style={{width: \"250px\"}}\n                    />\n                  </div>\n                  <div>\n                    <input\n                      value={this.state.english}\n                      onChange={e => this.setState({ english: e.target.value })}\n                      type=\"english\"\n                      placeholder=\"Enter sentence's english translation\"\n                      style={{width: \"250px\"}}\n                    />\n                  </div>\n                  <div>\n                    <input\n                      value={this.state.italics}\n                      onChange={e => this.setState({ italics: e.target.value })}\n                      type=\"italics\"\n                      placeholder=\"Enter sentence's extra notes\"\n                      style={{width: \"250px\"}}\n                    />\n                  </div>\n                   <Mutation mutation={this.state.replaceMode ? REPLACE_SENTENCE : ADD_SENTENCE}\n                      update={(store) => {\n                        this.setState(this.baseState)\n                        refetch()                      \n                        }\n                      }\n                   >\n                        {addSentence => (\n                          <button\n                            onClick={() => \n                              {\n                                this.submitSentenceData(interval.sentences.map((sentence) => sentence.clean_text), interval.interval_order,data.Author[0].level.teachable_words.length, addSentence)\n                              }\n                          }\n                            disabled={!containsWordToTeach/* || points <  interval.min_length || points >  interval.max_length*/}\n                          >\n                          Submit\n                          </button>\n                        )}\n                    </Mutation>\n                    <div>\n                    <button onClick={() => this.setState(this.baseState) }>\n                    Clear Sentence\n                    </button>\n                    </div>\n                  </div>\n                  )\n                }}\n            </Query>\n        </header>\n        \n      </div>\n    \n    );\n  }\n}\n\nexport default Author;\n","import React, { Component } from 'react'\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst GET_DROPDOWNS = gql`\n  query getDropdowns($userName: String!) {\n\tgetIntervalsAndLevels(userName: $userName) {\n\t\tlevels\n\t\tintervals\n\t}\n  }\n`\n\nconst GET_SENTENCE_LIST = gql`\n  query getSentences($levelNumber: Int! $intervalOrder: Int!) {\n\tgetSentenceList(levelNumber: $levelNumber intervalOrder: $intervalOrder) {\n\t\traw_text\n\t\tclean_text\n\t\twords_contained{\n\t\t\tcontains_order\n\t\t\tWord{\n\t\t\t\tword_id\n\t\t\t\ttext\n\t\t\t\talt_text\n\t\t\t\tlevel{\n\t\t\t\t\tpoints\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdisplay_text\n\t\tword_taught{\n\t\t\tword_id\n\t\t\ttext\n\t\t\talt_text\n\t\t\tlevel{\n\t\t\t\tpoints\n\t\t\t}\n\t\t}\n\t\tpinyin\n\t\tenglish\n\t\titalics\n\t\tinterval{\n\t        sentences{\n\t          clean_text\n\t        }\n\t\t\tinterval_order\n      \t\tseconds\n      \t\tmin_length\n      \t\tmax_length\n\t\t}\n\t}\n  }\n`\n\n\nclass Editor extends Component {\n\tstate = {\n      selectedLevel: 1,\n      selectedInterval: 1\n    }\n\n\n  getDropdowns(refetch){\n  \treturn (\n\t\t<Query query={GET_DROPDOWNS} variables={{userName: \"test\"}}>\n      \t{({ loading, error, data, refetch }) => {\n      \t  if (loading) return <div>Fetching</div>\n          if (error) return <div>Error</div>\n          return(\n          \t<div>\n          \tLevel: <select onChange={(e) => this.setState({selectedLevel: parseInt(e.target.value)})}>{data.getIntervalsAndLevels.levels.map((level) => <option value={level} selected={level === this.state.selectedLevel}>{level}</option>)}</select>\n          \tInterval: <select onChange={(e) => this.setState({selectedInterval: parseInt(e.target.value)})}>{data.getIntervalsAndLevels.intervals.map((interval) => <option value={interval} selected={interval === this.state.selectedInterval}>{interval}</option>)}</select>\n          \t</div>\n          )\n      \t}\n      }\n\t\t</Query>\n  \t)\n\n  }\n\n  parseSentence(sentence){\n  \tlet current_index = 0\n  \tlet sentenceElements = []\n  \tlet wordToTeach = null\n  \tlet containsWordToTeach = 0\n  \tlet points = 0\n  \tlet display_text_copy = sentence.display_text\n  \tconsole.log(sentence)\n  \tsentence.words_contained.sort((previous, next)=> {return previous.contains_order - next.contains_order})\n  \twhile(display_text_copy.length){\n  \t\tif(display_text_copy[0] === '#'){\n  \t\t\tsentenceElements.push({text: sentence.word_taught.text, alt_text: sentence.word_taught.alt_text, word_id: sentence.word_taught.word_id, level: {points: sentence.word_taught.level.points}})\n  \t\t\tif(wordToTeach === null){\n  \t\t\t\twordToTeach = {text: sentence.word_taught.text, alt_text: sentence.word_taught.alt_text, word_id: sentence.word_taught.word_id, level: {points: sentence.word_taught.level.points}}\n  \t\t\t}\n  \t\t\tdisplay_text_copy = display_text_copy.substring(1)\n  \t\t\tcontainsWordToTeach++\n  \t\t\tpoints += sentence.word_taught.level.points\n  \t\t} else if(sentence.words_contained[current_index] && sentence.words_contained[current_index].Word.text[0] === display_text_copy[0]){\n  \t\t\tconsole.log(sentence)\n  \t\t\tsentenceElements.push({ text: sentence.words_contained[current_index].Word.text, alt_text: sentence.words_contained[current_index].Word.alt_text, word_id: sentence.words_contained[current_index].Word.word_id, level: {points: sentence.words_contained[current_index].Word.level.points}})\n  \t\t\tdisplay_text_copy = display_text_copy.substring(sentence.words_contained[current_index].Word.text.length)\n  \t\t\tpoints += sentence.words_contained[current_index].Word.level.points\n  \t\t\tcurrent_index++\n  \t\t} else {\n  \t\t\t sentenceElements.push({text: display_text_copy[0]})\n  \t\t\t display_text_copy = display_text_copy.substring(1)\n  \t\t}\n  \t}\n\n\tthis.props.history.push({\n\t\tpathname: '/author',\n\t\tstate: {\n\t\t\tsentenceElements: sentenceElements, \n\t\t\tformerSentenceRawText: sentence.raw_text,\n\t\t\tformerSentenceCleanText: sentence.clean_text,\n\t\t\twordToTeach: wordToTeach,\n\t\t\tcontainsWordToTeach: containsWordToTeach,\n\t\t\tpinyin: sentence.pinyin,\n\t\t\tenglish: sentence.english,\n\t\t\titalics: sentence.italics,\n\t\t\tpoints: points,\n\t\t\tinterval: sentence.interval\n\t\t}  \n\t})\t\t\t\t\t\t\n  }\n\n\trender(){\n\t\treturn(\n\t    <div className=\"App\">\n\t      <header className=\"App-header\">\n\t\t      <Query query={GET_SENTENCE_LIST} variables={{levelNumber: this.state.selectedLevel, intervalOrder: this.state.selectedInterval}}>\n\t\t      \t{({ loading, error, data, refetch }) => {\n\t\t      \t  if (loading) return <div>Fetching</div>\n\t              if (error) return <div>Error</div>\n\t              return(\n\t              \t<div>\n\t              \t\t{this.getDropdowns()}\n\t              \t\t<table>\n\t              \t\t  <thead>\n\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t      <th>Sentence</th>\n\t\t\t\t\t\t      <th>Word Taught</th>\n\t\t\t\t\t\t      <th>Pinyin</th>\n\t\t\t\t\t\t      <th>Translation</th>\n\t\t\t\t\t\t      <th>Notes</th>\n\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t  </thead>\n\t              \t\t<tbody>\n\t              \t\t{data.getSentenceList.map(sentence => {\n\t              \t\t\treturn(\n\t\t              \t\t\t<tr>\n\t\t              \t\t\t <td>{sentence.raw_text}</td>\n\t\t              \t\t\t <td>{sentence.word_taught.text}</td>\n\t\t              \t\t\t <td>{sentence.pinyin}</td>\n\t\t              \t\t\t <td>{sentence.english}</td>\n\t\t              \t\t\t <td>{sentence.italics}</td>\n\t\t              \t\t\t <td><button onClick={() => this.parseSentence(sentence)}>Edit</button></td>\n\t\t              \t\t\t</tr>\n\t\t              \t\t)\n\t              \t\t})}\n\t              \t\t</tbody>\n\t              \t\t</table>\n\t              \t</div>\n\t              )\n\t          \t}\n\t          }\n\t\t\t\t</Query>\n\t\t\t</header>\n\t\t</div>\n\t\t)\n\t}\n\n\n\n}\n\nexport default Editor;","import React, { Component } from 'react'\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst GET_WORDS = gql`\n  query getWords {\n\tLevel {\n\t\tall_words{\n\t\t\tword_id\n\t\t\ttext\n\t\t\tpinyin\n\t\t\tenglish\n\t\t\titalics\n\t\t\ttimes_used\n\t\t\tlevel{\n\t\t\t\tlevel_number\n\t\t\t}\n\t\t}\n\t}\n  }\n`\n\n\nclass Words extends Component {\n\n\teditWord(word){\n\t\tthis.props.history.push({\n\t\t\tpathname: '/wordedit',\n\t\t\tstate: {\n\t\t\t\tword_id: word.word_id,\n\t\t\t\ttext: word.text,\n\t\t\t\tpinyin: word.pinyin,\n\t\t\t\tenglish: word.english,\n\t\t\t\titalics: word.italics\n\t\t\t}  \n\t\t})\n\t}\n\trender(){\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header\">\n\t\t      <Query query={GET_WORDS}>\n\t\t      \t{({ loading, error, data, refetch }) => {\n\t\t      \t  if (loading) return <div>Fetching</div>\n\t              if (error) return <div>error</div>\n\t              const word_list = data.Level[0].all_words\n\t              return(\n\t              \t\t <table>\n\t              \t\t  <thead>\n\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t      <th>Word</th>\n\t\t\t\t\t\t      <th>Pinyin</th>\n\t\t\t\t\t\t      <th>Translation</th>\n\t\t\t\t\t\t      <th>Notes</th>\n\t\t\t\t\t\t      <th>Times Used</th>\n\t\t\t\t\t\t      <th>Level</th>\n\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t  </thead>\n\t              \t\t<tbody>\n\t              \t\t{word_list.map(word => {\n\t              \t\t\treturn(\n\t\t              \t\t\t<tr>\n\t\t              \t\t\t <td>{word.text}</td>\n\t\t              \t\t\t <td>{word.pinyin}</td>\n\t\t              \t\t\t <td>{word.english}</td>\n\t\t              \t\t\t <td>{word.italics}</td>\n\t\t              \t\t\t <td>{word.times_used}</td>\n\t\t              \t\t\t <td>{word.level ? word.level.level_number : 0}</td>\n\t\t              \t\t\t <td><button onClick={() => this.editWord(word)}>Edit</button></td>\n\t\t              \t\t\t</tr>\n\t\t              \t\t)\n\t              \t\t})}\n\t              \t\t</tbody>\n\t              \t\t</table>\n\t              )\n\t          \t}\n\t      \t\t}\n\t          </Query>\n\t      </header>\n\t    </div>\n\t  );\n  \t}\n}\n\nexport default Words","import React, { Component } from 'react'\nimport { Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport '../styles/App.css';\n\nconst EDIT_WORD = gql`\n  mutation editWord($word_id: Int!, $english: String, $italics: String) {\n  \tUpdateWord(word_id: $word_id, english: $english, italics: $italics){\n  \t\tword_id\n  \t\ttext\n  \t}\n  }\n`\n\nclass WordEdit extends Component {\n\tconstructor(props){\n    super(props)\n    this.state = {\n      word_id: props.location.state.word_id,\n      text: props.location.state.text,\n      pinyin: props.location.state.pinyin,\n      english: props.location.state.english,\n      italics: props.location.state.italics\n    }\n  }\n\trender(){\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header\">\n\t        <p>{this.state.text}</p>\n\t        <p>{this.state.pinyin}</p>\n\t        <p>Translation</p>\n            <input\n              value={this.state.english}\n              onChange={e => this.setState({ english: e.target.value })}\n              type=\"english\"\n              placeholder=\"Enter word's english translation\"\n              style={{width: \"250px\"}}\n            />\n            <p>Notes</p>\n\t        <input\n              value={this.state.italics}\n              onChange={e => this.setState({ italics: e.target.value })}\n              type=\"italics\"\n              placeholder=\"Enter word's extra notes\"\n              style={{width: \"250px\"}}\n            />\n            <Mutation mutation={EDIT_WORD}\n               update={(store) => {\n                   this.props.history.push({pathname: '/words' })                   \n                }}\n             >\n\t            {editWord => (\n\t              <button onClick={() => editWord({variables: {word_id: parseInt(this.state.word_id), english: this.state.english, italics: this.state.italics}})} disabled={this.state.english.length === 0}>\n\t              Submit\n\t              </button>\n\t            )}\n             </Mutation>\n\t      </header>\n\t    </div>\n\t  );\n  \t}\n}\n\nexport default WordEdit;","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const {stepAtInterval, currentTimeInterval, intervalOrder } = props;\n  console.log(props)\n\nconst dotStyleEmpty = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"background-color\": \"#bbb\",\n  \"border-radius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\nconst textStyle = {\n  \"margin-block-start\": \"1.2em\",\n  \"font-size\": \"10px\",\n  \"color\": \"aquamarine\"\n}\n\nconst dotGroup = {\n  \"marginRight\": \"10px\"\n}\n\nconst dotStyleFullInterval1 = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"backgroundColor\": \"rgb(85 233 255)\",\n  \"border-radius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\nconst dotStyleFullInterval2 = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"backgroundColor\": \"rgb(255 97 255)\",\n  \"border-radius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\nconst dotStyleFullInterval3 = {\n  height: \"10px\",\n  width: \"10px\",\n  \"marginRight\": \"10px\",\n  \"backgroundColor\": \"rgb(247 255 0)\",\n  \"border-radius\": \"50%\",\n  \"display\": \"inline-block\"\n}\n\n\n\n\nfunction displayNewStatus(){\n  var textToShow = \"\"\n  if(stepAtInterval === 1){\n    if(intervalOrder === 1){\n      textToShow = \"New Word\"\n    } else {\n      textToShow = \"New Phrase\"\n    }\n  }\n  return textToShow\n}\n\n\n  return (\n    <div style={{display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"row\"}}>\n      <div style={dotGroup}>\n      <span style={currentTimeInterval >= 1 ? dotStyleFullInterval1 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 2 ? dotStyleFullInterval1 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 3 ? dotStyleFullInterval1 : dotStyleEmpty}></span>\n      </div>\n      <div style={dotGroup}>\n      <span style={currentTimeInterval >= 4 ? dotStyleFullInterval2 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 5 ? dotStyleFullInterval2 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 6 ? dotStyleFullInterval2 : dotStyleEmpty}></span>\n      </div>\n      <div style={dotGroup}>\n      <span style={currentTimeInterval >= 7 ? dotStyleFullInterval3 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 8 ? dotStyleFullInterval3 : dotStyleEmpty}></span>\n      <span style={currentTimeInterval >= 9 ? dotStyleFullInterval3 : dotStyleEmpty}></span>\n      </div>\n      <p style={textStyle}>{displayNewStatus()}</p>\n    </div>\n  );\n};\n\nexport default ProgressBar;","import React from 'react';\nimport '../styles/Modal.css';\n\nconst Modal = ({ handleClose, show, characters }) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n\t\t{\n\t\t\tcharacters.map(char => \n\t            <div>\n\t\t            <p>{char.text}</p>\n\t\t            <p>{char.english}</p>\n            \t</div>\n          )}\n        <button onClick={handleClose}>close</button>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { Component } from 'react'\nimport {Query, Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Howl } from 'howler';\nimport ProgressBar from './ProgressBar'\nimport Switch from \"./Switch\";\nimport Modal from './Modal'\nimport { getCookie} from '../utils'\n\n\n\nconst MAKE_ATTEMPT = gql`\n  mutation makeAttempt($userId: Int!, $sentenceId: Int!, $isCorrect: Boolean!) {\n\tmakeClozeAttempt(userId: $userId, sentenceId: $sentenceId, isCorrect: $isCorrect)\n  }\n\n`\n\nconst CREATE_USER = gql`\nmutation addTemporaryUser($user_name: String!, $email: String!, $password: String!, $role: String!) {\n  CreateUser(user_name: $user_name, email: $email, password: $password, role: $role) {\n    _id\n    user_name\n    role\n    token\n  }\n}\n\n`\n\nconst GET_SENTENCE = gql`\n  query getSentence($userId: Int!) {\n\tgetNextSentence(userId: $userId) {\n\t\t_id\n    time_fetched\n\t\traw_text\n    alt_raw_text\n\t\tdisplay_text\n    alt_display_text\n    clean_text\n    alt_clean_text\n\t\tpinyin\n\t\tenglish\n    italics\n    interval{\n      interval_order\n    }\n\t\tword_taught{\n      word_id\n\t\t\ttext\n      alt_text\n\t\t\tenglish\n      pinyin\n      italics\n\t\t\tcharacters{\n\t\t\t\ttext\n\t\t\t\tenglish\n\t\t\t}\n\t\t}\n    current_learners{\n      CURRENT_TIME_INTERVAL\n      STEP_AT_INTERVAL\n      User{\n        _id\n      }\n    }\n\n\t}\n\n  getCurrentProgress(userId: $userId){\n    words_learned\n    intervals_completed\n    total_word_count\n  }\n\n  }\n\n`\n\nclass Play extends Component {\n\tconstructor(){\n    super()\n    this.state = {\n    \tshowAnswer: false,\n      showPinyin: false,\n      showTraditional: false,\n      isSubmitted: false,\n      showCharacterDefinitions: false,\n    \tuserResponse: '',\n      isCorrect: true,\n      audio: null,\n      timeFetched: null,\n      user:{\n        user_name: null,\n        userId: null,\n        role: null\n      },\n      lastSentence: null\n\n    }\n  }\n\n  componentDidMount(){\n    if(this.props.user){\n      const {user_name, _id ,role} = this.props.user\n      this.setUserInfo(user_name, parseInt(_id), role)\n    }\n  }\n\n  setUserInfo(user_name, userId, role){\n    this.setState({user:{user_name, userId, role}})\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.user && this.props.user && this.props.user._id === prevProps.user._id && this.props.user.role === prevProps.user.role){\n      //do nothing\n    }else{\n      if(this.props.user){\n        const {user_name, _id ,role} = this.props.user\n        this.setUserInfo(user_name, parseInt(_id), role)\n      }else if(prevProps.user && !this.props.user){\n        this.setUserInfo(null,null,null)\n      }\n    }\n  }\n\n  showModal = () => {\n    this.setState({ showCharacterDefinitions: true });\n  };\n\n  hideModal = () => {\n    this.setState({ showCharacterDefinitions: false });\n  };\n\n\tcheckAnswer(correct_response) {\n\t\treturn correct_response.text === this.state.userResponse || correct_response.alt_text === this.state.userResponse\n\t}\n\n  setAudio(interval, word_id) {\n    var Sounds\n     Sounds = new Howl({\n         src: [\"/audio/sentences/\" + interval + \"-\" + word_id + \".m4a\"]\n      })\n  \n    return Sounds\n  }\n\n  playSound(){\n    if(this.state.audio){\n        this.state.audio.play()\n    }\n  }\n\n  stopSound(){\n    if(this.state.audio){\n        this.state.audio.stop()\n    }\n\n  }\n\n  getFontColor(word){\n    var color = 'black'\n    if(this.state.isSubmitted){\n      color = this.checkAnswer(word) ? 'green' : 'red'\n    }\n    return color\n  }\n\n  submitAnswer(makeAttempt, refetch, userId, sentenceId, correctResponse, time_fetched, isCorrect){\n    if(!this.state.isSubmitted){\n      makeAttempt({variables:{\n        userId: userId,\n        sentenceId: sentenceId,\n        isCorrect: isCorrect\n      }})\n    }\n     else if(this.state.isSubmitted && this.state.showAnswer){\n      this.setState({\n          showAnswer: false,\n          showPinyin: false,\n          isSubmitted: false,\n          userResponse: '',\n          timeFetched: time_fetched,\n          showCharacterDefinitions: false,\n          lastSentence: null\n      }, () => {this.stopSound()})\n    } else{\n        this.setState({\n        showAnswer: true,\n        showPinyin: true,\n        userResponse: correctResponse,\n        }, () => {this.playSound()})\n    }\n  }\n\n  getText(text){\n    return(\n      <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n      <p style={{fontSize: \"calc(10px + 2vmin)\"}}>{text.english}</p> <i style={{\"marginBlockStart\": \"1em\", fontSize: \"calc(10px + 2vmin)\"}}>{text.italics}</i>\n      </div>\n      )\n  }\n\n  getUserIntervalStep(showAnswer, isCorrect, thisUser){\n    var progress\n    if(!thisUser){\n      progress = 1\n    } else{\n      progress = thisUser.STEP_AT_INTERVAL\n    }\n    if(showAnswer && isCorrect){\n      progress = progress + 1\n    }\n    return progress\n\n  }\n\n  getUserInterval(showAnswer, isCorrect, thisUser){\n    var progress\n    if(!thisUser){\n      progress = 0\n    } else{\n      progress = thisUser.CURRENT_TIME_INTERVAL\n    }\n    if(showAnswer && isCorrect){\n      progress = progress + 1\n    }\n    return progress\n\n  }\n\n\n  playDashboard(userId,role){\n    return(\n      <Query query={GET_SENTENCE} variables={{userId: userId}}>\n          {({ loading, error, data, refetch }) => {\n            if (loading) return <div style={{\"marginTop\": \"25%\",marginLeft: \"45%\"}}>Loading</div>\n            if (error) return <div style={{\"marginTop\": \"25%\",marginLeft: \"45%\"}}>error</div>\n            const nextSentence = this.state.lastSentence ||data.getNextSentence\n            console.log(nextSentence)\n            //Don't rerender when waiting for refetch or when there is no result\n            if (nextSentence && this.state.timeFetched === nextSentence.time_fetched)  return <div/>\n            if(data.getNextSentence && data.getCurrentProgress){\n              const sentenceId = parseInt(nextSentence._id)\n              const userIntervalStep = this.getUserIntervalStep(this.state.showAnswer,this.state.isCorrect,nextSentence.current_learners[0])\n              const userInterval = this.getUserInterval(this.state.showAnswer,this.state.isCorrect,nextSentence.current_learners[0])\n                return(\n                  <div style={{display: \"flex\", flexDirection: \"row\", \"width\": \"100%\"}}>\n                  <div style={{\"flexGrow\": \"4\", \"paddingTop\": \"20%\"}}>\n                  {role === \"TESTER\" && (<p style={{fontSize: \"12px\", \"marginBottom\": \"20px\"}}>You are currently not logged in. Log in to save your progress.</p>)}\n                  <div style={{display: \"inline-block\", \"text-align\": \"center\"}}>\n                    <ProgressBar stepAtInterval={userIntervalStep} currentTimeInterval={userInterval} intervalOrder={nextSentence.interval.interval_order} />\n                    <Modal characters={nextSentence.word_taught.characters} show={this.state.showCharacterDefinitions} handleClose={this.hideModal}/>\n                     <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                      {this.state.showAnswer && <button  style={{\"width\": \"25px\", \"height\": \"25px\", \"marginRight\": \"10px\", \"marginBlockStart\": \"1.8em\"}} onClick={() => this.playSound(nextSentence._id, nextSentence.word_taught.word_id)}><img style={{\"width\": \"100%\"}} alt=\"replay audio\" src=\"speaker_icon.svg\"/></button>}\n                     {this.state.showPinyin ? <p style={{fontSize: \"calc(10px + 2vmin)\"}}>{nextSentence.pinyin}</p> : this.getText(nextSentence)}\n                      </div>\n                     <Mutation mutation={MAKE_ATTEMPT} refetchQueries={[{query: GET_SENTENCE, variables: {userId: userId}}]}\n                          update={(store) => {\n                            if(!this.state.isSubmitted){\n                              this.setState({\n                              isSubmitted: true,\n                              showAnswer: this.checkAnswer(nextSentence.word_taught),\n                              showPinyin: this.checkAnswer(nextSentence.word_taught),\n                              isCorrect: this.checkAnswer(nextSentence.word_taught),\n                              audio: this.setAudio(nextSentence.interval.interval_order, nextSentence.word_taught.word_id),\n                              lastSentence: nextSentence\n                              }, () => {\n                                if(this.checkAnswer(nextSentence.word_taught)){\n                                  this.playSound()\n                                }\n                              })\n                            }\n\n                            }\n                          }\n                         >\n                          {makeAttempt => (\n                            <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n                             <p style={{fontSize: \"40px\"}}>{this.state.showTraditional ? nextSentence.alt_display_text.substr(0,nextSentence.alt_display_text.indexOf('#')) : nextSentence.display_text.substr(0,nextSentence.display_text.indexOf('#'))}</p>\n                            <input style={{width: `${nextSentence.word_taught.text.length * 40}px`,fontSize: \"40px\", margin: \"15px 5px 15px 5px\", color: this.getFontColor(nextSentence.word_taught), height: \"40px\", \"marginBlockStart\": \"1em\"}} value={this.state.userResponse} onChange={e => this.setState({ userResponse: e.target.value })}\n                            onKeyDown={(e) => {\n                              if (e.key === 'Enter') {\n                                this.submitAnswer(makeAttempt, refetch, userId, sentenceId, (this.state.showTraditional ? nextSentence.word_taught.alt_text : nextSentence.word_taught.text), nextSentence.time_fetched, this.checkAnswer(nextSentence.word_taught))\n                              }\n                            }}\n                            />\n                             <p style={{fontSize: \"40px\"}}>{this.state.showTraditional ? nextSentence.alt_display_text.substr(nextSentence.alt_display_text.indexOf('#') + 1,nextSentence.alt_display_text.length) : nextSentence.display_text.substr(nextSentence.display_text.indexOf('#') + 1,nextSentence.display_text.length)}</p>\n                            <button\n                              style={{margin: \"15px 5px 15px 5px\", height: \"40px\", \"marginBlockStart\": \"3.2em\"}}\n                              onClick={() => \n                                {\n                                  this.submitAnswer(makeAttempt, refetch, userId, sentenceId, (this.state.showTraditional ? nextSentence.word_taught.alt_text : nextSentence.word_taught.text), nextSentence.time_fetched, this.checkAnswer(nextSentence.word_taught))\n                                }\n                              }\n                            >\n                            {!this.state.isSubmitted ? \"Submit Answer\" : (this.state.showAnswer ? \"Next Phrase\" : \"Show Answer\")}\n                            </button>\n                            </div>\n                          )}\n                    </Mutation>\n                  </div>\n                  <div>\n                    <p>{(nextSentence.clean_text !== nextSentence.word_taught.text) && (this.state.showPinyin ? nextSentence.word_taught.pinyin : this.getText(nextSentence.word_taught))}</p>\n                  </div>\n                  {this.state.showAnswer && nextSentence.word_taught.characters.length > 0 && <button onClick={() => this.setState(prevState => ({showCharacterDefinitions: !prevState.showCharacterDefinitions}))}>Character Definitions</button>}\n              </div>\n              <div style={{\"flexGrow\": 1, \"backgroundColor\": \"lightslategray\"}}>\n                 <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"right\"}}>\n                      <p style={{fontSize: \"14px\"}}>{\"Words Learned: \" + data.getCurrentProgress.words_learned + \"/\" + data.getCurrentProgress.total_word_count}</p>\n                      <p style={{fontSize: \"14px\"}}>{\"Cards Completed: \" + data.getCurrentProgress.intervals_completed}</p>\n                      <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\"}}>\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\"}}>{\"Simplified\"}</p> \n                        <Switch switchId={`simplified-traditional-switch`} isDisabled={false} isOn={this.state.showTraditional} handleToggle={() => this.setState(prevState => ({showTraditional: !prevState.showTraditional}))} />\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\", \"marginLeft\": \"5%\"}}>{\"Traditional\"}</p> \n                      </div>\n                      <div style={{display: \"flex\", flexDirectioion: \"row\", justifyContent: \"center\", \"marginTop\": \"20px\"}}>\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\"}}>{\"English\"}</p> \n                        <Switch switchId={`english-pinyin-switch`} isDisabled={!this.state.showAnswer} isOn={this.state.showPinyin} handleToggle={() => this.setState(prevState => ({showPinyin: !prevState.showPinyin}))} />\n                        <p style={{fontSize: \"14px\", \"marginBlockStart\": \"0.5em\", \"marginLeft\": \"5%\"}}>{\"Pinyin\"}</p> \n                      </div>\n                </div>\n              </div>\n              </div>\n            ) \n         }\n          else return <div style={{display: \"flex\", justifyContent: \"center\", \"width\": \"100%\", \"marginTop\": \"25%\"}}>{!!getCookie('access-token') && (data && data.getCurrentProgress && data.getCurrentProgress.words_learned === 150)  ? (<p>{\"Demo Complete\"}</p>) : !getCookie('access-token') && (<p>{\"Please login to continue\"}</p>)}</div>\n         }}\n        </Query>\n    )\n\n  }\n\n   _confirm = async data => {\n    this.props.refetchUser()\n  }\n\n\trender() {\n\t  const {userId, role} = this.state.user\n\t  return (\n\t    <div className=\"App\">\n\t      <header className=\"App-header-play\">\n          {userId !==null && typeof userId !== 'undefined' ? this.playDashboard(userId, role): \n              <Mutation mutation={CREATE_USER}\n                onCompleted={data => this._confirm(data)}\n                >\n              {createUser => (\n              <div style={{\"marginTop\": \"25%\",marginLeft: \"30%\"}}>\n              <p>Remember to set your keyboard's language to Chinese</p>\n              <button onClick={()=> createUser({variables:{user_name: \"\", email: \"\", password: \"\", role: \"TESTER\"}})}>Start Learning</button>\n              </div>\n              )}\n            </Mutation>}\n\t      </header>\n          <footer>\n            <span><b>Contact:</b> <a href=\"mailto:clozechinese@gmail.com\">clozechinese@gmail.com</a></span> \n          </footer>\n\t    </div>\n\t  );\t\t\n\t}\n}\n\n\n\n\n\nexport default Play;","import React, { Component } from 'react'\n\n\n\n\nclass About extends Component {\n\n  render() {\n    return(\n      <div className=\"App\">\n        <header className=\"App-header-about\">\n        <p><b>Me:</b></p>\n        <p>\n        My name is Cory and I am learning Mandarin Chinese. I’m a big fan of fill-in-the-blanks (cloze) flashcards and have used them to learn other languages, but I couldn’t find any such apps for Chinese that appealed to me. I decided to make my own.\n        </p>\n        <p><b>This App:</b></p>\n        <p>\n\t\tThis app is a prototype of what I would like to create in the near future. It works by starting from zero and progressively introducing words to the user which are then used in fill-in-the-blanks exercises. I have written the phrases myself (even though I don’t know very much Chinese), and I have only included the 150 words from HSK1.\n        </p>\n        <p><b>Goals:</b></p>\n\t\t<ul>\n\t\t  <li>Find a native Chinese speaker (preferably with teaching experience) who would like to partner with me on this project </li>\n\t\t  <li>Get as much feedback as possible on the app: What don’t you like about it? What could be better?</li>\n\t\t  <li>Find a better method for creating audio</li>\n\t\t</ul>\n\t\t<span><p><b>Contact me:</b></p> <a href=\"mailto:clozechinese@gmail.com\" style={{\"color\":\"aquamarine\"}}>clozechinese@gmail.com</a></span> \n\t\t<p>Please email me if you have any feedback or if you could get me in touch with a potential collaborator. I would be happy to chat with you!</p>\n        </header>\n      </div>\n    )\n  }\n\n}\n\nexport default About","import React, { Component } from 'react'\n\n\n\n\nclass Citations extends Component {\n\n  render() {\n    return(\n      <div className=\"App\">\n        <header className=\"App-header-about\">\n        <p><b>This demo uses the following sources:</b></p>\n        <span>HSK 1 Word Definitions: <a href=\"https://hskhsk.com/word-lists\" style={{\"color\":\"aquamarine\"}} >https://hskhsk.com/word-lists</a> </span>\n        <span>HSK 1 Character Definitions:  <a href=\"http://hanzidb.org/\" style={{\"color\":\"aquamarine\"}} >http://hanzidb.org/</a></span> \n        <p>Audio: Apple text-to-speech </p>\n        <p>(Many definitions have been shortened for use in this demo.)</p>\n        </header>\n      </div>\n    )\n  }\n\n}\n\nexport default Citations","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './Login'\nimport Header from './Header'\nimport Author from './Author'\nimport Editor from './Editor'\nimport Words from './Words'\nimport WordEdit from './WordEdit'\nimport Play from './Play'\nimport About from './About'\nimport Citations from './Citations'\n\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\n\nconst GET_USER = gql`\nquery getUser {\n  me {\n    _id\n    user_name\n    role\n    password\n    token\n  }\n}\n`\n\n\n\n\n\nclass App extends Component {\n\n  render() {\n    return(\n      <div>\n      <Query query={GET_USER}>\n      {({ loading, error, data, refetch }) => {\n        if (loading) return <div>Fetching</div>\n        if (error) return <div>error</div>\n        const user = data.me\n        console.log(user)\n        return(\n        <div>\n          <Header user={user} refetchUser={refetch}/>\n          <Switch>\n            <Route exact path=\"/\" render={() => (<Play  user={user} refetchUser={refetch}/> )} />\n            {user && user.role === 'ADMIN' && (<Route exact path=\"/author\" component={Author} />)}\n            {user && user.role === 'ADMIN' && (<Route exact path=\"/editor\" component={Editor} />)}\n            {user && user.role === 'ADMIN' && (<Route exact path=\"/words\" component={Words} />)}\n            {user && user.role === 'ADMIN' && (<Route exact path=\"/wordedit\" component={WordEdit} />)}\n            <Route exact path=\"/login\" render={() => (<Login user={user} refetchUser={refetch}/>)} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/citations\" component={Citations} />\n          </Switch>\n        </div>\n        )\n      }}\n      </Query>\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from 'react-apollo'\n//import { onError } from \"apollo-link-error\";\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { BrowserRouter } from 'react-router-dom'\n//import { setContext } from 'apollo-link-context'\n//import { getToken } from './constants'\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n  credentials: 'include'\n\n})\n\n\n/*const authLink = setContext((_, { headers }) => {\n  const token = getToken()\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})*/\n/*const errorLink = onError(({ graphQLErrors, networkError }) => {\n    console.log(graphQLErrors, networkError)\n    if (graphQLErrors){\n      graphQLErrors.map(({ message, locations, path }) => {\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n        )\n        \n\n      })\n    }\n\n\n  })*/\n\nconst client = new ApolloClient({\n  //link: authLink.concat(httpLink),\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\nserviceWorker.unregister();\n\n"],"sourceRoot":""}